---
- name: get ingress
  register: cr_get_ingress_result
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Ingress
    name: cluster
    kubeconfig: "{{ kubeconfig_file }}"

- name: get default ingress domain
  ansible.builtin.set_fact:
    cr_ingress_domain: "{{ cr_get_ingress_result.resources[0].spec.domain }}"

- name: report if ingress dns domain mismatch
  when: cr_ingress_domain != cluster_ingress_domain
  vars:
    _new_result: "the ingress domain does not match spec"
  ansible.builtin.include_tasks: store-result.yaml

- name: verify wild dns
  ansible.builtin.set_fact:
    cr_dns_result: "{{ lookup('community.general.dig',
                              lookup('password', '/dev/null chars=ascii_letters, length=8') | lower + '.' + cr_ingress_domain + '.') }}"

- name: report if incorrect wildcard dns lookup
  when: (cr_dns_result | split(',') | unique) != (ingress_ip | unique)
  vars:
    _new_result: "wildcard dns lookup did not resolve correctly"
  ansible.builtin.include_tasks: store-result.yaml

- name: get ingress controller default certificate name
  register: cr_get_ingress_controller_result
  kubernetes.core.k8s_info:
    api_version: operator.openshift.io/v1
    kind: IngressController
    name: default
    namespace: openshift-ingress-operator
    kubeconfig: "{{ kubeconfig_file }}"

- name: get ingress controller default certificate
  register: cr_ingress_cert_result
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ cr_get_ingress_controller_result.resources[0].spec.defaultCertificate.name }}"
    namespace: openshift-ingress
    kubeconfig: "{{ kubeconfig_file }}"

- name: report if default ingress certificate has incorrect subject alternative name
  when: ('DNS:*.' + cr_ingress_domain) not in (cr_ingress_cert_result.resources[0].data['tls.crt'] | b64decode |
                                               community.crypto.x509_certificate_info).subject_alt_name
  vars:
    _new_result: "incorrect SAN on default wildcard dns certificate"
  ansible.builtin.include_tasks: store-result.yaml
...
