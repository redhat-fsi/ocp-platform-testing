---
- name: initialize variables
  ansible.builtin.set_fact:
    cr_insecure_import: []

- name: get image config
  register: cr_get_image_result
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Image
    name: cluster
    kubeconfig: "{{ kubeconfig_file }}"

- name: report if insecure registries are allow
  when:
    - cr_get_image_result.resources[0].spec.registrySources is defined
    - cr_get_image_result.resources[0].spec.registrySources.insecureRegistries is defined
    - cr_get_image_result.resources[0].spec.registrySources.insecureRegistries | length != 0
  vars:
    _new_result: "one or more insecure registries allowed"
  ansible.builtin.include_tasks: store-result.yaml

- name: report if incorrect image registries whitelist configuration
  when: (cr_get_image_result.resources[0].spec.registrySources is not defined or
         cr_get_image_result.resources[0].spec.registrySources.allowedRegistries is not defined or
         (cr_get_image_result.resources[0].spec.registrySources.allowedRegistries | unique) != (allowed_registries | unique))
  vars:
    _new_result: "incorrect image registries whitelist configuration"
  ansible.builtin.include_tasks: store-result.yaml

- name: check allowed registries for import
  when: cr_get_image_result.resources[0].spec.allowedRegistriesForImport is defined
  loop: "{{ cr_get_image_result.resources[0].spec.allowedRegistriesForImport }}"
  ansible.builtin.set_fact:
    cr_insecure_import: "{{ cr_insecure_import + ([item.domainName] if item.insecure is defined and item.insecure else []) }}"

- name: report if allow to import from insecure registries
  when: (cr_insecure_import | length) > 0
  vars:
    _new_result: "one or more insecure registries allowed for import"
  ansible.builtin.include_tasks: store-result.yaml

- name: get sample operator config
  register: cr_get_sample_result
  kubernetes.core.k8s_info:
    api_version: samples.operator.openshift.io/v1
    kind: Config
    name: cluster
    kubeconfig: "{{ kubeconfig_file }}"

# https://access.redhat.com/solutions/6547281
- name: report if samplesRegistry is not configured for sample operator
  when: (cr_get_sample_result.resources[0].spec.samplesRegistry is not defined or
         cr_get_sample_result.resources[0].spec.samplesRegistry != samples_registry)
  vars:
    _new_result: "'samplesRegistry: {{ samples_registry }}' not configured for sample operator"
  ansible.builtin.include_tasks: store-result.yaml
...
