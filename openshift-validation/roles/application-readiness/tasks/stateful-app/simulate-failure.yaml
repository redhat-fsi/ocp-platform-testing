---
- name: get all pods in the namespace
  register: ar_get_pods_result
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ ar_app_namespace }}"
    kubeconfig: "{{ kubeconfig_file }}"

- name: simulate failure by deleting all pods in the namespace
  loop: "{{ ar_get_pods_result.resources | map(attribute='metadata.name') }}"
  kubernetes.core.k8s:
    api_version: v1
    kind: Pod
    namespace: "{{ ar_app_namespace }}"
    name: "{{ item }}"
    state: absent
    # force delete of mongodb pod will cause DBPathInUse error as mongod process did not have time release file lock
    # the file lock issue will resolve after a few pod restarts (CrashLoopBackOff); mongod recover data from clean checkpoint
    delete_options:
      gracePeriodSeconds: 0
    kubeconfig: "{{ kubeconfig_file }}"

- name: wait 10 seconds
  ansible.builtin.set_fact:
    __: "{{ lookup('ansible.builtin.pipe', 'sleep 10') }}"

- name: wait until no terminating pods
  register: ar_pods_result
  until:
    - ar_pods_result.resources                      # just in case
    - (ar_pods_result.resources | selectattr('metadata.deletionTimestamp', 'defined') |
        map(attribute='metadata.deletionTimestamp') | length) == 0
    - (ar_pods_result.resources | map(attribute='status.phase') | unique) == ['Running']
  delay: 3
  retries: 30
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ ar_app_namespace }}"
    kubeconfig: "{{ kubeconfig_file }}"

- name: wait for deployments to be ready
  ansible.builtin.import_tasks: wait-deployments.yaml
...
